server {
    listen       8080;
    server_name  localhost;
    
    location / {
        root   /usr/share/nginx/html;
        index  index.html;
    
        # "Pretty" URL-s: don't require the .html file extension
        try_files $uri.html $uri $uri/index.html =404;
    }
    


    # with Content Security Policy (CSP) enabled(and a browser that supports it(http://caniuse.com/#feat=contentsecuritypolicy),
    # you can tell the browser that it can only download content from the domains you explicitly allow
    # http://www.html5rocks.com/en/tutorials/security/content-security-policy/
    # https://www.owasp.org/index.php/Content_Security_Policy
    # I need to change our application code so we can increase security by disabling 'unsafe-inline' 'unsafe-eval'
    # directives for css and js(if you have inline css or js, you will need to keep it too).
    # more: http://www.html5rocks.com/en/tutorials/security/content-security-policy/#inline-code-considered-harmful
    add_header Content-Security-Policy-Report-Only "default-src 'self'; script-src 'self' 'unsafe-inline' https://www.google-analytics.com; upgrade-insecure-requests; img-src 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://themes.googleusercontent.com https://fonts.gstatic.com; frame-src self; object-src 'none'";

    add_header X-Want-To-Work-With "Well designed HTTP API-s";
    add_header X-Recruitment "https://linkedin.com/in/anroots";
    add_header X-Powered-By "Jekyll";
    
    # Only some select HTTP methods are allowed
    if ($request_method !~ ^(GET|HEAD|OPTIONS)$ ) {
        return 405;
    }
}
